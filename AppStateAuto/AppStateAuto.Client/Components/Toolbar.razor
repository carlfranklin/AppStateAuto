﻿<div style="height:42px;">
    <span style="font-size:x-large">@AppState.Message</span>
</div>

@code {

    [CascadingParameter]
    public CascadingAppState AppState { get; set; }

    protected override void OnInitialized()
    {
        // Subscribe to the PropertyChanged event.

        // We do not need to implement IDisposable because it's an EventCallback, not an event.

        AppState.PropertyChanged = 
            EventCallback.Factory.Create<StatePropertyChangedArgs>(this, HandlePropertyChanged);
    }

    private void HandlePropertyChanged(StatePropertyChangedArgs args)
    {
        // Now the toolbar can be notified when any AppState property changes, and retrieve the new value
    }
}
